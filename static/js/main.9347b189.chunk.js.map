{"version":3,"sources":["components/Card/Card.js","components/Nav/Nav.js","components/Wrapper/Wrapper.js","components/Title/Title.js","App.js","index.js"],"names":["Card","props","className","classname","value","id","onClick","handleClick","alt","name","src","image","Nav","title","message","score","highScore","Wrapper","children","Title","App","state","people","currentScore","clicked","indexOf","handleIncrement","setState","concat","handleReset","newScore","handleShuffle","shuffledCards","array","i","length","j","Math","floor","random","shuffleCards","this","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"yhFAiBeA,G,MAdF,SAAAC,GAAK,OACd,yBAAKC,UAAU,2BACX,yBACIC,UAAU,OACVC,MAAOH,EAAMI,GACbC,QAAS,kBAAML,EAAMM,YAAYN,EAAMI,MAEvC,yBAAKH,UAAU,iBACX,yBAAKM,IAAKP,EAAMQ,KAAMC,IAAKT,EAAMU,aCMlCC,G,MAdH,SAAAX,GAAK,OACb,6BACI,4BACI,wBAAII,GAAG,SACH,0BAAMH,UAAY,UAAUD,EAAMY,QAGtC,wBAAIR,GAAG,WAAWJ,EAAMa,SACxB,wBAAIT,GAAG,aAAP,kBAAmCJ,EAAMc,OACzC,wBAAIV,GAAG,aAAP,cAA+BJ,EAAMe,eCPlCC,G,MAFC,SAAAhB,GAAK,OAAI,yBAAKC,UAAU,WAAWD,EAAMiB,YCE1CC,G,MAFD,SAAAlB,GAAK,OAAI,wBAAIC,UAAU,SAASD,EAAMiB,Y,iBCqFrCE,E,2MAvEbC,MAAQ,CACNC,SACAC,aAAc,EACdP,UAAW,EACXF,QAAS,GACTU,QAAS,I,EAGXjB,YAAc,SAAAF,IAC4B,IAApC,EAAKgB,MAAMG,QAAQC,QAAQpB,IAC7B,EAAKqB,kBACL,EAAKC,SAAS,CAACH,QAAS,EAAKH,MAAMG,QAAQI,OAAOvB,MAElD,EAAKwB,e,EAITH,gBAAkB,WAChB,IAAMI,EAAW,EAAKT,MAAME,aAAe,EAC3C,EAAKI,SAAS,CACZJ,aAAcO,EACdhB,QAAS,4DAEX,EAAKiB,iB,EAGPF,YAAc,WACZ,EAAKF,SAAS,CACZJ,aAAc,EACdP,UAAW,EAAKK,MAAML,UACtBF,QAAS,8CACTU,QAAS,KAEX,EAAKO,iB,EAGPA,cAAgB,WACd,IAAIC,EA9CR,SAAsBC,GACpB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAI,CACxC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADA,EAEjB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFiC,KAE7BD,EAAMG,GAFuB,KAI1C,OAAOH,EAyCeO,CAAalB,GACjC,EAAKK,SAAS,CAACL,OAAQU,K,wEAGf,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CACAnB,MAAO,mBACPE,MAAO0B,KAAKpB,MAAME,aAClBP,UAAWyB,KAAKpB,MAAML,UACtBF,QAAS2B,KAAKpB,MAAMP,UAGpB,kBAAC,EAAD,yGAGC2B,KAAKpB,MAAMC,OAAOoB,KAAI,SAAApB,GAAM,OAC3B,kBAAC,EAAD,CACAqB,IAAKrB,EAAOjB,GACZE,YAAa,EAAKA,YAClBmB,gBAAiB,EAAKA,gBACtBG,YAAa,EAAKA,YAClBE,cAAe,EAAKA,cACpB1B,GAAIiB,EAAOjB,GACXM,MAAOW,EAAOX,gB,GA/DNiC,aCVlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9347b189.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = props => (\n    <div className=\"col-md-2 col-sm-3 col-6\">\n        <div\n            classname=\"card\"\n            value={props.id}\n            onClick={() => props.handleClick(props.id)}>\n\n            <div className=\"img-container\">\n                <img alt={props.name} src={props.image} />\n            </div>\n        </div>\n    </div>\n);\n\nexport default Card;","import React from \"react\";\nimport \"./Nav.css\";\n\nconst Nav = props => (\n    <nav>\n        <ul>\n            <li id=\"title\">\n                <span className = \"header\">{props.title}</span>\n            </li>\n\n            <li id=\"message\">{props.message}</li>\n            <li id=\"gameScore\">Current Score: {props.score}</li>\n            <li id=\"highScore\">Top Score: {props.highScore}</li>\n        </ul>\n    </nav>\n)\n\nexport default Nav;","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => <h1 className=\"title\">{props.children}</h1>;\n\nexport default Title;","import React, {Component} from 'react';\nimport Card from \"./components/Card\";\nimport Nav from \"./components/Nav\";\nimport Wrapper from \"./components/Wrapper\"\nimport Title from \"./components/Title\"\nimport people from \"./cards.json\"\nimport './App.css';\n\nfunction shuffleCards(array) {\n  for (let i = array.length - 1; i > 0; i--){\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\nclass App extends Component {\n  state = {\n    people,\n    currentScore: 0,\n    highScore: 0,\n    message: \"\",\n    clicked: [],\n  };\n\n  handleClick = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.handleIncrement();\n      this.setState({clicked: this.state.clicked.concat(id)});\n    } else{\n      this.handleReset();\n    }\n  };\n\n  handleIncrement = () => {\n    const newScore = this.state.currentScore + 1;\n    this.setState({\n      currentScore: newScore,\n      message: \"You're the Master of Karate and Friendship for everyone\"\n    })\n    this.handleShuffle();\n  };\n\n  handleReset = () => {\n    this.setState({\n      currentScore: 0,\n      highScore: this.state.highScore,\n      message: \"I AM UNTETHERED AND MY RAGE KNOWS NO BOUNDS\",\n      clicked: []\n    });\n    this.handleShuffle();\n  };\n\n  handleShuffle = () => {\n    let shuffledCards = shuffleCards(people);\n    this.setState({people: shuffledCards});\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Nav\n        title= \"Clickity Cricket\"\n        score={this.state.currentScore}\n        highScore={this.state.highScore}\n        message={this.state.message}\n        />\n\n        <Title>\n          Test Your Memory! Click an image to earn points. If you click an image more than once, you lose!\n        </Title>\n        {this.state.people.map(people => (\n          <Card\n          key={people.id}\n          handleClick={this.handleClick}\n          handleIncrement={this.handleIncrement}\n          handleReset={this.handleReset}\n          handleShuffle={this.handleShuffle}\n          id={people.id}\n          image={people.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}